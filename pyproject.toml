[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.module]
name = "aiida_flexpart"

[project]
name = "aiida-flexpart"
version = "0.1.1"
readme = "README.md"
license = {file = 'LICENSE'}
description = "AiiDA plugin for the FLEXPART code (simulation of atmospheric transport processes)."
classifiers = [
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Framework :: AiiDA",
    "Development Status :: 3 - Alpha",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
    "Programming Language :: Python :: 3",

]
requires-python = ">=3.9"
dependencies = [
    "aiida-core>=1.6.5,<3.0.0",
    "six",
    "psycopg2-binary<2.9",
    "voluptuous",
    "jinja2",
]

[[project.authors]]
name = ""

[project.urls]
Homepage = "https://github.com/aiidaplugins/aiida-flexpart"

[project.optional-dependencies]
dev = [
    "pgtest~=1.3.1",
    "pytest~=6.0",
    "pytest-cov",
    "pre-commit~=2.2",
]

docs = [
    "sphinx",
    "sphinxcontrib-contentui",
    "sphinxcontrib-details-directive",
    "sphinx-rtd-theme",
]

[project.entry-points."aiida.calculations"]
"flexpart.cosmo" = "aiida_flexpart.calculations.flexpart_cosmo:FlexpartCosmoCalculation"
"flexpart.ifs" = "aiida_flexpart.calculations.flexpart_ifs:FlexpartIfsCalculation"
"flexpart.post" = "aiida_flexpart.calculations.flexpart_post:PostProcessingCalculation"
"collect.sensitivities" = "aiida_flexpart.calculations.collect_sens:CollectSensitivitiesCalculation"

[project.entry-points."aiida.parsers"]
"flexpart.cosmo" = "aiida_flexpart.parsers.flexpart_cosmo:FlexpartCosmoParser"
"flexpart.ifs" = "aiida_flexpart.parsers.flexpart_ifs:FlexpartIfsParser"
"flexpart.post" = "aiida_flexpart.parsers.flexpart_post:FlexpartPostParser"

[project.entry-points."aiida.workflows"]
"flexpart.multi_dates" = "aiida_flexpart.workflows.multi_dates_workflow:FlexpartMultipleDatesWorkflow"

[tool.pylint.format]
max-line-length = 125

[tool.pylint.messages_control]
disable = [
    "too-many-ancestors",
    "invalid-name",
    "duplicate-code",
    "too-many-locals",
    "too-many-statements",
]

[tool.pytest.ini_options]
python_files = "test_*.py example_*.py"
filterwarnings = [
    "ignore::DeprecationWarning:aiida:",
    "ignore::DeprecationWarning:plumpy:",
    "ignore::DeprecationWarning:django:",
    "ignore::DeprecationWarning:yaml:",
]
